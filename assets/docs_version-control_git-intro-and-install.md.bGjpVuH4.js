import{_ as i,c as s,o as t,ab as a}from"./chunks/framework.nyVnLald.js";const e="/FrontEnd-Engineering-Guide/assets/git-mange-architecture.BQbf0gt4.png",F=JSON.parse('{"title":"Git介绍与安装","description":"","frontmatter":{},"headers":[],"relativePath":"docs/version-control/git-intro-and-install.md","filePath":"docs/version-control/git-intro-and-install.md","lastUpdated":1709631746000}'),l={name:"docs/version-control/git-intro-and-install.md"},n=a('<h1 id="git介绍与安装" tabindex="-1">Git介绍与安装 <a class="header-anchor" href="#git介绍与安装" aria-label="Permalink to &quot;Git介绍与安装&quot;">​</a></h1><p>Git目前是世界上最受欢迎的版本控制系统，它由 Linux 操作系统内核的著名创建者 Linus Torvalds 于 2005 年开发。<strong>Git 是一个分布式版本控制系统（DVCS）。每个开发人员都拥有自己的本地存储库，其种包含了完整代码以及完整的文件历史记录，开发者可以在本地进行修改和提交，也可以与其他开发者分享和同步代码变更。</strong></p><p><img src="'+e+`" alt="git-mange-architecture"></p><h2 id="git的优缺点" tabindex="-1">Git的优缺点 <a class="header-anchor" href="#git的优缺点" aria-label="Permalink to &quot;Git的优缺点&quot;">​</a></h2><p>Git是世界上最受欢迎的版本控制系统，它具有许许多多强大的优势：</p><ul><li><strong>更强大的性能：</strong> Git在提交、分支、合并和比较等操作上进行了性能优化，利用文件树知识提高效率。它关注文件内容而不是文件名，并使用增量编码、压缩和明确存储目录内容和版本元数据对象来存储文件。</li><li><strong>分布式开发：</strong> Git 是一个分布式版本控制系统，每个开发人员都拥有自己的本地存储库，拥有完整的本地历史记录使得Git的速度更快，因为这意味着你无需网络连接就可以创建提交、检查文件的先前版本，或者在提交之间执行差异比较。</li><li><strong>更安全：</strong> Git通过SHA1算法保护文件内容和更改历史的完整性，确保源代码的真实历史记录</li><li><strong>分支隔离：</strong> Git 最大的优势之一是它的分支功能，分支为代码库的每次更改提供了一个隔离的环境，让开发人员能够并行完成开发工作。当开发人员想要开始做某件事时（无论大小）他们都会创建一个新分支，这确保了主分支始终不受影响，并且使用分支比直接编辑生产代码更可靠，而且还提供组织优势，它能够以您相同的工作粒度来表示开发工作。</li><li><strong>更灵活：</strong> Git具有灵活性，支持各种非线性开发工作流程，高效处理小型和大型项目，并与现有系统和协议兼容。</li><li><strong>庞大的社区：</strong> Git 是一个非常受欢迎的开源项目，拥有十多年的可靠管理，并且拥有庞大的开源社区支持，这意味着您可以轻松找到解决问题的答案，并且能够快速利用第三方库完成需求。</li></ul><p>当然Git也并非全然完美，虽说是一个强大而受欢迎的版本控制系统，但同时也存在一些缺点：</p><ul><li><strong>学习曲线陡峭：</strong> 对于初学者来说，Git的学习曲线可能很陡峭。理解Git的概念、命令和工作流程可能需要一定的时间和努力。初学者可能会感到困惑，尤其是在处理冲突、解决错误和执行高级操作时。</li><li><strong>存储空间占用：</strong> Git存储库的大小可能会比其他版本控制系统的存储库大。这是由于Git存储了完整的历史记录和元数据信息，包括每个提交的快照。对于非常大型的项目或存储库，这可能导致存储空间占用的增加。</li><li><strong>合并冲突：</strong> 在多人协作的项目中，当多个开发人员同时修改同一文件的相同部分时，可能会发生合并冲突。解决合并冲突可能需要一些手动操作，特别是当冲突较为复杂时。这可能需要开发人员花费额外的时间和精力来解决这些冲突。</li></ul><h2 id="安装git" tabindex="-1">安装Git <a class="header-anchor" href="#安装git" aria-label="Permalink to &quot;安装Git&quot;">​</a></h2><h3 id="下载windows版" tabindex="-1">下载Windows版 <a class="header-anchor" href="#下载windows版" aria-label="Permalink to &quot;下载Windows版&quot;">​</a></h3><p>选择以下方式之一在 Windows 上安装 Git：</p><ul><li><p>下载最新的<a href="https://sourceforge.net/projects/git-for-windows.mirror/" target="_blank" rel="noreferrer">Windows版Git安装程序</a></p></li><li><p>使用winget工具</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">winget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Git.Git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> winget</span></span></code></pre></div></li></ul><h3 id="下载macos版" tabindex="-1">下载MacOS版 <a class="header-anchor" href="#下载macos版" aria-label="Permalink to &quot;下载MacOS版&quot;">​</a></h3><p>选择以下方式之一在MacOS上安装 Git：</p><ul><li><p>下载最新的<a href="https://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noreferrer">MacOS版Git安装程序</a></p></li><li><p>使用Homebrew</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre></div></li><li><p>使用MacPorts</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre></div></li></ul><h3 id="下载linux-unix版" tabindex="-1">下载Linux/Unix版 <a class="header-anchor" href="#下载linux-unix版" aria-label="Permalink to &quot;下载Linux/Unix版&quot;">​</a></h3><p><a href="https://git-scm.com/download/linux" target="_blank" rel="noreferrer">详情点击链接查看</a></p><h3 id="验证是否安装成功" tabindex="-1">验证是否安装成功 <a class="header-anchor" href="#验证是否安装成功" aria-label="Permalink to &quot;验证是否安装成功&quot;">​</a></h3><p>打开终端并输入以下命令验证安装是否成功：git --version</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.9</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.2</span></span></code></pre></div>`,20),r=[n];function h(o,p,d,g,c,k){return t(),s("div",null,r)}const C=i(l,[["render",h]]);export{F as __pageData,C as default};
